@{
    ViewData["Title"] = "Gráfica de Dispersión";
}

<h2 class="text-center mt-3 mb-4">Gráfica de Dispersión</h2>

<!-- =================== FILTROS =================== -->
<div class="filters mb-4 text-center">
    <div style="display:inline-flex; gap:15px; align-items:center; flex-wrap:wrap; justify-content:center;">
        <label>Carrera:</label>
        <select id="carreraSelect" class="form-control" style="width:260px;">
            <option value="">-- Selecciona carrera --</option>
        </select>

        <label>Materia:</label>
        <select id="materiaSelect" class="form-control" style="width:220px;">
            <option value="">-- Selecciona materia --</option>
        </select>

        <label>Unidad:</label>
        <select id="unidadSelect" class="form-control" style="width:220px;">
            <option value="">-- Selecciona unidad --</option>
        </select>

        <button id="btnFiltrar" class="btn btn-primary">Filtrar</button>
        <button id="btnExportar" class="btn btn-success">Exportar PDF</button>
    </div>
</div>

<!-- =================== GRÁFICA =================== -->
<div id="graficaContainer" class="chart-container mb-5"
     style="
        width: 100%;
        max-width: 1000px;
        margin: 0 auto;
        background: #fff;
        padding: 20px;
        border-radius: 12px;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        height: 550px;
    ">
    <canvas id="dispersionChart" style="height: 100%; width: 100%;"></canvas>
</div>

<!-- =================== TABLA =================== -->
<div id="tablaContainer" style="max-width: 1000px; margin: 0 auto;">
    <h5 class="text-center mb-3 text-secondary">Datos de alumnos (Asistencia vs Calificación)</h5>
    <table id="tablaResultados" class="table table-striped table-bordered">
        <thead class="table-dark text-center">
            <tr>
                <th>Alumno</th>
                <th>Carrera</th>
                <th>Materia</th>
                <th>Unidad</th>
                <th>% Asistencia</th>
                <th>Calificación</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            cargarCarreras().then(() => {
                document.getElementById("carreraSelect").value = 1;
                cargarMaterias(1).then(() => {
                    document.getElementById("materiaSelect").value = 1;
                    cargarUnidades(1).then(() => {
                        document.getElementById("unidadSelect").value = 1;
                        cargarDatos();
                    });
                });
            });

            // =================== EVENTOS ===================
            document.getElementById("carreraSelect").addEventListener("change", function () {
                const idCarrera = this.value;

                // Limpiar selects dependientes y gráfica
                document.getElementById("materiaSelect").innerHTML = '<option value="">-- Selecciona materia --</option>';
                document.getElementById("unidadSelect").innerHTML = '<option value="">-- Selecciona unidad --</option>';
                limpiarGraficaYTabla();

                if (idCarrera) cargarMaterias(idCarrera);
            });

            document.getElementById("materiaSelect").addEventListener("change", function () {
                const idMateria = this.value;

                // Limpiar unidades y gráfica
                document.getElementById("unidadSelect").innerHTML = '<option value="">-- Selecciona unidad --</option>';
                limpiarGraficaYTabla();

                if (idMateria) cargarUnidades(idMateria);
            });

            document.getElementById("unidadSelect").addEventListener("change", limpiarGraficaYTabla);
            document.getElementById("btnFiltrar").addEventListener("click", cargarDatos);
            document.getElementById("btnExportar").addEventListener("click", exportarPDF);
        });

        // =================== LIMPIAR ===================
        function limpiarGraficaYTabla() {
            if (chartInstance) chartInstance.destroy();
            document.querySelector("#tablaResultados tbody").innerHTML = "";
        }

        // =================== CARGAR CARRERAS ===================
        function cargarCarreras() {
            return fetch('/api/carreras')
                .then(res => res.json())
                .then(carreras => {
                    const select = document.getElementById("carreraSelect");
                    select.innerHTML = '<option value="">-- Selecciona carrera --</option>';
                    carreras.forEach(c => {
                        const opt = document.createElement("option");
                        opt.value = c.id_Carrera;
                        opt.text = c.nombre_Carrera;
                        select.appendChild(opt);
                    });
                });
        }

        // =================== CARGAR MATERIAS ===================
        function cargarMaterias(idCarrera) {
            const materiaSelect = document.getElementById("materiaSelect");
            materiaSelect.innerHTML = '<option value="">-- Selecciona materia --</option>';
            if (!idCarrera) return Promise.resolve();

            return fetch(`/api/materias/${idCarrera}`)
                .then(res => res.json())
                .then(materias => {
                    materias.forEach(m => {
                        const opt = document.createElement("option");
                        opt.value = m.id_Materia;
                        opt.text = m.nombre_Materia;
                        materiaSelect.appendChild(opt);
                    });
                });
        }

        // =================== CARGAR UNIDADES ===================
        function cargarUnidades(idMateria) {
            const unidadSelect = document.getElementById("unidadSelect");
            unidadSelect.innerHTML = '<option value="">-- Selecciona unidad --</option>';
            if (!idMateria) return Promise.resolve();

            return fetch(`/api/unidades/${idMateria}`)
                .then(res => res.json())
                .then(unidades => {
                    unidades.forEach(u => {
                        const opt = document.createElement("option");
                        opt.value = u.id_Unidades;
                        opt.text = u.nombre_Unidad;
                        unidadSelect.appendChild(opt);
                    });
                });
        }

        // =================== CARGAR DATOS ===================
        function cargarDatos() {
            const idCarrera = document.getElementById("carreraSelect").value;
            const idMateria = document.getElementById("materiaSelect").value;
            const idUnidad = document.getElementById("unidadSelect").value;

            if (!idCarrera || !idMateria || !idUnidad) {
                alert("Selecciona carrera, materia y unidad.");
                return;
            }

            const url = `/Graficas/ObtenerDatosMateriaUnidadCarrera?idCarrera=${idCarrera}&idMateria=${idMateria}&idUnidad=${idUnidad}`;

            fetch(url)
                .then(r => r.json())
                .then(data => {
                    actualizarTabla(data);
                    actualizarGrafica(data);
                })
                .catch(() => console.error("❌ Error al cargar los datos."));
        }

        // =================== TABLA ===================
        function actualizarTabla(data) {
            const tbody = document.querySelector("#tablaResultados tbody");
            tbody.innerHTML = "";
            data.forEach(row => {
                tbody.innerHTML += `
                    <tr>
                        <td>${row.alumno}</td>
                        <td>${row.carrera}</td>
                        <td>${row.materia}</td>
                        <td>${row.unidad}</td>
                        <td>${row.porcentajeAsistencia}%</td>
                        <td>${row.calificacionUnidad}</td>
                    </tr>`;
            });
        }

        // =================== GRÁFICA ===================
        let chartInstance = null;
        function actualizarGrafica(data) {
            const ctx = document.getElementById("dispersionChart").getContext("2d");
            const puntos = data.map(d => ({ x: d.porcentajeAsistencia, y: d.calificacionUnidad }));

            if (chartInstance) chartInstance.destroy();

            chartInstance = new Chart(ctx, {
                type: 'scatter',
                data: {
                    datasets: [{
                        label: 'Asistencia vs Calificación',
                        data: puntos,
                        backgroundColor: 'rgba(13, 110, 253, 0.8)',
                        borderColor: '#0056b3',
                        borderWidth: 1.5,
                        pointRadius: 7,
                        pointHoverRadius: 9
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        x: {
                            title: { display: true, text: '% Asistencia', color: '#333', font: { size: 14, weight: 'bold' } },
                            min: 0, max: 100
                        },
                        y: {
                            title: { display: true, text: 'Calificación', color: '#333', font: { size: 14, weight: 'bold' } },
                            min: 0, max: 100
                        }
                    },
                    plugins: {
                        legend: { position: 'top' },
                        tooltip: {
                            callbacks: {
                                label: ctx => `Asistencia: ${ctx.parsed.x}% | Calificación: ${ctx.parsed.y}`
                            }
                        }
                    }
                }
            });
        }

                // =================== EXPORTAR PDF ===================
        async function exportarPDF() {
            try {
                const { jsPDF } = window.jspdf;
                const doc = new jsPDF('l', 'pt', 'a4'); // formato horizontal

                // === Contenedores ===
                const chartContainer = document.getElementById('graficaContainer');
                const tablaContainer = document.getElementById('tablaContainer');

                // ====== Gráfica ======
                const canvasChart = await html2canvas(chartContainer, {
                    scale: 2,
                    backgroundColor: "#ffffff",
                    useCORS: true
                });
                const imgChart = canvasChart.toDataURL('image/png', 1.0);

                doc.setFontSize(18);
                doc.text("Gráfica de Dispersión", 300, 50);
                doc.addImage(imgChart, 'PNG', 40, 80, 750, 420);

                // ====== Tabla ======
                doc.addPage();
                const canvasTabla = await html2canvas(tablaContainer, {
                    scale: 1.5,
                    backgroundColor: "#ffffff",
                    useCORS: true
                });
                const imgTabla = canvasTabla.toDataURL('image/png', 1.0);

                doc.setFontSize(18);
                doc.text("Tabla de Datos", 350, 50);
                doc.addImage(imgTabla, 'PNG', 40, 80, 750, 400);

                // ====== Guardar ======
                const nombreSeguro = (s) => (s || "").toString().replace(/[\\/:*?"<>|]/g, "_").trim();
                const carreraTxt = nombreSeguro(document.querySelector("#carreraSelect option:checked")?.text);
                const materiaTxt = nombreSeguro(document.querySelector("#materiaSelect option:checked")?.text);
                const unidadTxt  = nombreSeguro(document.querySelector("#unidadSelect option:checked")?.text);
                const fileName = `Grafica_Dispersion_${carreraTxt}_${materiaTxt}_${unidadTxt}.pdf`;

                doc.save(fileName);
                console.log("✅ PDF generado correctamente:", fileName);
            }
            catch (err) {
                console.error("❌ Error al exportar PDF:", err);
            }
        }

    </script>
}
